<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>跨出界</title><link>https://fun2ex.com/</link><description>Recent content on 跨出界</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 24 Mar 2022 15:39:11 +0800</lastBuildDate><atom:link href="https://fun2ex.com/index.xml" rel="self" type="application/rss+xml"/><item><title>定时检查 unraid 网络情况，并重启</title><link>https://fun2ex.com/posts/corn-check-network-for-unraid/</link><pubDate>Thu, 24 Mar 2022 15:39:11 +0800</pubDate><guid>https://fun2ex.com/posts/corn-check-network-for-unraid/</guid><description>主要是为了解决机器不知道为啥突然掉 ip 的问题，就写了一个简单地监测脚本。
这是一个简单的小技巧，直接使用 unraid CA 的 User Scripts Plugin 即可。
新建一个 Script, 名字简介随便填，Script 内容如下：
#!/bin/bash ping fun2ex.com -c 1 &amp;gt;/dev/null if [ $? -ne 0 ];then # powerdown -r echo `date` powerdown restart &amp;gt;&amp;gt; /tmp/powerdown_logs.txt fi 检查时间选手动，按照 cron 的规则添加即可，考虑到阵列关机的时间，我这里设定了 30 分钟检查一次。
# cron setting */30 * * * * &amp;ndash;EOF&amp;ndash;</description></item><item><title>解决华擎 Z370M-Pro4 主板在 Unraid 无法获取风扇转速</title><link>https://fun2ex.com/posts/fixed-z370m-pro4-unraid-temperature-problem/</link><pubDate>Wed, 16 Mar 2022 10:27:05 +0800</pubDate><guid>https://fun2ex.com/posts/fixed-z370m-pro4-unraid-temperature-problem/</guid><description>主板型号：华擎 Z370M-pro4
安装了「Dynamix System Temperature」却发现怎样也获取不了主板的温度和风扇的转速。
经过一番资料搜索，大致确定问题如下：
Dynamix System Temperature 非商业应用，实际上能够校验的主板不多 coretemp 不支持 ITE IT8686E Super IO Sensors 华擎的部分主板是 nct6683 感应器，只能通过手动加载 mod 处理 知道了问题，那么解决起来也简单，打开终端手工加载一下驱动即可：
$ modprobe coretemp $ modprobe -r nct6683 $ modprobe nct6683 force=1 然后回到 了「Dynamix System Temperature」 看看是不是已经可以正常了。
&amp;ndash;EOF&amp;ndash;
参考资料：
温度检测插件无法检测到主板风扇的转速 Unraid插件篇—重点解决ITE IT8686E芯片驱动无法获取阵列风扇信息</description></item><item><title>解决 Unraid 在关机的之后无法 unmout NFS 的问题</title><link>https://fun2ex.com/posts/fixed-the-unraid-umount-nfs-problem/</link><pubDate>Tue, 08 Mar 2022 11:01:32 +0800</pubDate><guid>https://fun2ex.com/posts/fixed-the-unraid-umount-nfs-problem/</guid><description>先说一下场景：
主机安装了 unraid 6.9.2 开了一个虚拟机跑黑群晖, 并直通了一个网口+两块硬盘 unraid 通过 Unassigned Devices 来挂载黑群晖的硬盘, 使用 NFS 协议 问题： 想更换硬盘的时候, 直接点停止阵列, 等了大半天都没有停止成功。 检查了一下系统日志, 发现一直卡在 Unmounting Remote SMB/NFS Share 不成功, 并且一直在重试。
造成这个问题的原因是因为黑群晖也是跑在 unraid 上面的, 停止阵列的操作会优先把 Docker 和虚拟机服务优先关闭掉, 导致 NFS 链接失去响应无法正常 Unmoun。
搜索了一下发现好多人都碰到过类似的问题：NFS 服务器某些原因断网后, NFS 客户机无法 umount 直到最新的 nfsv4 都是这样子, 所以会造成进程一致卡住在重试。
解决办法有以下两种：
更换成 SAMBA, SMB 无法卸载不影响关机，不会造成假死。 在关机前, 手动在 Unassigned Devices umount 所有已经挂载的 NFS mount, 或者可以打开终端运行 umount -l /mnt/remotes/* 强制卸载所有 NFS umount. 剩下在问题就是如何把方案 2 改成自动化，不需要每次去手工执行，在 unraid forums 看到一个解决方案：</description></item><item><title>How to Install Seafile Pro and Use Caddy Proxy Fronted on Ubuntu 18.04</title><link>https://fun2ex.com/posts/how-to-install-seafile-pro-and-use-caddy-proxy-fronted-on-ubuntu-18-04/</link><pubDate>Fri, 04 Mar 2022 10:43:00 +0800</pubDate><guid>https://fun2ex.com/posts/how-to-install-seafile-pro-and-use-caddy-proxy-fronted-on-ubuntu-18-04/</guid><description>&lt;p>读完这篇文章，你应该能完成安装以下软件：&lt;/p>
&lt;ul>
&lt;li>python &amp;amp; python-pip&lt;/li>
&lt;li>caddy&lt;/li>
&lt;li>mysql-server&lt;/li>
&lt;li>jre&lt;/li>
&lt;li>seafile-pro ```&lt;/li>
&lt;/ul>
&lt;p>注意：如果你想流程的跑 Seafile，机器配置建议：&lt;/p>
&lt;pre tabindex="0">&lt;code>1. 内存 &amp;gt;= 2GB
2. CPU &amp;gt;= 2 Core
&lt;/code>&lt;/pre>&lt;h2 id="环境准备">环境准备&lt;/h2>
&lt;p>以下只针对 ubuntu 18.04 系统，在下一个 LTS 版本出来之前，应该都不会更新。&lt;/p></description></item><item><title>win10 内网下如何开启远程登录</title><link>https://fun2ex.com/posts/open-remote-login-form-win10/</link><pubDate>Thu, 25 Mar 2021 10:39:53 +0800</pubDate><guid>https://fun2ex.com/posts/open-remote-login-form-win10/</guid><description>一开始找到一句这样的命令：
wmic /node:[IP OR Domain] /user:[User] /password:[Password] PATH win32_terminalservicesetting WHERE (__Class!=&amp;#34;&amp;#34;) CALL SetAllowTSConnections 1 一直报错，没想明白是什么原因。
一番搜寻之后大致清楚了，最终的命令如下：
wmic /node:[IP OR Domain] /user:[User] /password:[Password] RDTOGGLE WHERE (__Class!=&amp;#34;&amp;#34;) CALL SetAllowTSConnections 1 查阅资料：
https://www.yuque.com/waiting4/fgq227/gfi4v7 https://blog.csdn.net/Aaron_Miller/article/details/109644865</description></item><item><title>Apple 微信公众号排版效果</title><link>https://fun2ex.com/posts/apple-ipad-for-wechat-article/</link><pubDate>Wed, 25 Mar 2020 10:39:31 +0800</pubDate><guid>https://fun2ex.com/posts/apple-ipad-for-wechat-article/</guid><description>&lt;p>近期到处都可以看到这个被刷屏的微信公众号案例。&lt;/p>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/ZYfIqwPNbHVepSyJsLFk-w">https://mp.weixin.qq.com/s/ZYfIqwPNbHVepSyJsLFk-w&lt;/a>&lt;/p>
&lt;p>我们就来聊一聊怎么实现的，说起来也不复杂，主要就是利用 SVG 的动画效果 + 创意达到了这么酷炫的效果。&lt;/p>
&lt;p>涉及到也只有两个动画元素 &lt;code>opacity&lt;/code> 和 &lt;code>height&lt;/code> 的变化。&lt;/p>
&lt;p>微信图文内容本质上也是一段 HTML 代码，先看一个 demo&lt;/p>
&lt;p>这是一篇正常的图片，只不过是全图片排版的。&lt;/p></description></item><item><title> 面试题一道</title><link>https://fun2ex.com/posts/change_json_underline_to_camp/</link><pubDate>Fri, 15 Nov 2019 10:39:11 +0800</pubDate><guid>https://fun2ex.com/posts/change_json_underline_to_camp/</guid><description>这是碰到的一道面试题，记录一下。
问题是：如何 json 数据的所有 key 从下划线改为驼峰
下面是答题过程中的实现方法：
const testData = { a_bbb: 123, a_g: [1, 2, 3, 4], a_d: { s: 2, s_d: 3 }, a_f: [1, 2, 3, { a_g: 5 }], a_d_s: 1 } /** * _w 的形式转成 W */ function toCame(str) { return str.replace(/\_(\w)/g, function(a, b) { return b.toUpperCase(); }); } /** * 将一个json数据的所有key从下划线改为驼峰 * * @param {object | array} value 待处理对象或数组 * @returns {object | array} 处理后的对象或数组 */ function mapKeysToCamelCase(data) { if(data instanceof Array) { data.</description></item><item><title>SFTPGo 安装配置指南</title><link>https://fun2ex.com/posts/sftpgo-setting-and-install-guide/</link><pubDate>Mon, 19 Aug 2019 10:38:55 +0800</pubDate><guid>https://fun2ex.com/posts/sftpgo-setting-and-install-guide/</guid><description>&lt;blockquote>
&lt;p>&lt;a href="https://github.com/drakkan/sftpgo">SFTPGo&lt;/a>
Full featured and highly configurable SFTP server software
一个全功能和高度可配置的SFTP服务器软件&lt;/p>
&lt;/blockquote>
&lt;p>这是 Github 上作者对这个软件的介绍，适用下来也名副其实，符合我的需求。但是因为官网上安装引导文档比较含糊，就记录一下自己折腾的过程。&lt;/p>
&lt;p>以下的操作过程均基于一个全新安装的 &lt;a href="http://releases.ubuntu.com/18.04/">Ubuntu 18.04.2 LTS (Bionic Beaver)&lt;/a> 操作系统，按道理 Debian 适用。&lt;/p>
&lt;p>因为我自己只想配置一个独立的 SFTP 服务器，利用 SFTPGo 来协助管理账号，所以没有适用 MySQL / PostreSQL 之类的数据库，而选用了 SQLite 3.x.&lt;/p>
&lt;p>&lt;del>版本：0.9.0&lt;/del>
版本：0.9.4-dev&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;h3 id="sftpgo-需要的系统环境">SFTPGo 需要的系统环境&lt;/h3>
&lt;ol>
&lt;li>需要 Go 1.12 版本以上&lt;/li>
&lt;li>需要一个数据库 ( MySQL / PostreSQL / SQLite )&lt;/li>
&lt;li>如果需要运行 cli 测试脚本，还需要 Python 环境和 Request 库。&lt;/li>
&lt;li>Git 命令&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">$ sudo add-apt-repository ppa:longsleep/golang-backports
$ sudo apt update
$ sudo apt install golang-go sqlite3 python3 python3-pip git
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="sftpgo-安装">SFTPGo 安装&lt;/h3>
&lt;p>很简单，只需要执行以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">$ go get -u github.com/drakkan/sftpgo
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后在你的 &lt;code>$GOPATH/bin/&lt;/code> 下找到 &lt;code>sftpgo&lt;/code> 命令，如果你不知道你的 &lt;code>$GOPATH&lt;/code> 目录，请执行 &lt;code>go env&lt;/code> 查看你的环境变量。&lt;/p>
&lt;p>这样就算安装完成了，但是具体要使用的话，还需要简单配置一下。&lt;/p></description></item><item><title>Caddy 安装配置指南(LCMP)</title><link>https://fun2ex.com/posts/caddy-install-and-setting-guide/</link><pubDate>Tue, 23 Jul 2019 10:38:29 +0800</pubDate><guid>https://fun2ex.com/posts/caddy-install-and-setting-guide/</guid><description>&lt;h2 id="0-什么是-caddy">0. 什么是 Caddy&lt;/h2>
&lt;blockquote>
&lt;p>Caddy 服务器是一个开源的，使用 Golang 编写，支持 HTTP/2 的 Web 服务端。它使用 Golang 标准库提供 HTTP 功能。 Caddy 一个显著的特性是默认启用HTTPS。它是第一个无需额外配置即可提供 HTTPS 特性的Web 服务器。&lt;/p>
&lt;/blockquote>
&lt;p>以下是基于 Ubuntu 18.04 的安装说明：&lt;/p>
&lt;h2 id="1-安装">1. 安装&lt;/h2>
&lt;p>你可以直接从 &lt;a href="https://caddyserver.com/download">Download Caddy&lt;/a> 这里下载，选择好的你平台和插件就可以直接下载运行了。&lt;/p>
&lt;p>当然，我比较推崇第二种方式，就是使用 &lt;a href="https://getcaddy.com/">https://getcaddy.com/&lt;/a> 的脚本安装。
官方不推进使用 &lt;code>root&lt;/code> 权限来安装运行 caddy，所以我们直接使用普通用户权限执行以下命令即可。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ curl https://getcaddy.com | bash -s personal
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>读后感 - 01</title><link>https://fun2ex.com/posts/nothing-01/</link><pubDate>Mon, 01 Jul 2019 10:38:11 +0800</pubDate><guid>https://fun2ex.com/posts/nothing-01/</guid><description>&lt;h2 id="起源">起源&lt;/h2>
&lt;p>「你了解自己吗？」&lt;/p>
&lt;p>「你能说出自己的缺点和优点吗？」&lt;/p>
&lt;p>这两句话对我的印象很深刻，在某次问题讨论上，某人在发现我存在着某些非常严重缺点的时候提出来问题。&lt;/p>
&lt;p>第一个问题我的第一反映回答了：是。&lt;/p>
&lt;p>第二个问题，却让我突然间恐惧和不自信起来，因为我发现我自己词穷了。我居然说不出来自己有哪些缺点，有哪些优点。一个人连自己自身的优缺点都没办法清晰的认知，从何谈改进，从何谈承诺，从何谈未来。&lt;/p>
&lt;p>何以能说要变成一个更好的人。&lt;/p>
&lt;p>举个例子，你一直走在一条布满陷阱和诱惑的路上，一路走来磕磕碰碰，一次再一次的踩入一样的陷阱，被一样的诱惑吸引停留，虽然大部分时候最终也到达了终点，但却是比别人花费了更多的时间与精力，得到了与他人一样甚至于逊于他人的结果，也从来没有总结和分析过这样的原因。那是不是以后走上了一条错路就再也纠不回来了呢？&lt;/p>
&lt;p>时间有限，精力有限，世界很精彩，不应该把时间浪费在这些低效和拖累自身的事情上。从自身的角度出发，当前最重要的一点就是：正确的认识自己。&lt;/p>
&lt;p>认识自己是一个很痛苦的过程，很多时候你不愿意面对各种你所唾弃的缺点，并且会给自己暗示：这不是真正的我。但是你得尝试接受这样的自己，然后警惕这样的自己，进而改变自己。这些缺点不应该成为你的绊脚石，应该把它作为你的战绩。&lt;/p></description></item><item><title>为什么大多数人需要仪式感</title><link>https://fun2ex.com/posts/about-the-sense-of-ceremony/</link><pubDate>Wed, 26 Jun 2019 18:09:38 +0800</pubDate><guid>https://fun2ex.com/posts/about-the-sense-of-ceremony/</guid><description>源起与跟小仙女聊天时候讨论了一下有关「仪式感」的内容，扩展理解了一下，发现挺有趣的。记录一下自己的想法。
PS：不讨论「宗教/文化」层面的「仪式感」，只是想从心理学的角度来讨论一下。
什么是「仪式感」 按照我自己的理解尝试解释一下：「仪式」会赋予某一时间段内发生的特定事件「与众不同」的意义，而仪式感便是在仪式之中产生的体验感。直白的说，就是让你的每一个时刻，都跟以往的时刻不一样。
同理还有一个叫「小资」的概念，我觉得这俩是有区别的。区别在于，「小资」是在自己能力水平范围内，尽量用最好的。而「仪式感」是在你可行的范围中，让自己的每一刻有改变发生。
这几天在读「全情投入」时，看到一个例子：
快速转换工作思维和生活思维 - 魔力台阶
”现在，听好了，虽然你自己不知道，但那些台阶是有魔力的，能把你从冷酷的商人变成顾家的男人，走上第一阶台阶的时候，你就把工作抛到了脑后，它会从你的脑子里面彻底消失。电话、会议、协议、客户、战略，还有必须记住的事情，统统都会消失。&amp;quot;
&amp;ldquo;第二步，你要清空自己。你的大脑会变得空空如也。踏上第二阶台阶的时候，你的脑海会变成流水，什么也不想。&amp;rdquo;
&amp;ldquo;踏上第三阶台阶的时候，你要把全部的注意力转移到这屋里面你关心的人身上，他们都在家里等着你，呯！你那睿智的大脑就只想着屋子里面的人了。你要开始思考下面这个问题：&amp;lsquo;他们今天过的怎样?&amp;rsquo; 对此充满好奇吧！弄清除他们在做什么，然后尽快参与其中。&amp;rdquo;
这就是「仪式感」，把生活中平常的的事件赋予不同的意义。小王子里面也有关类似的说明，就不具体阐述了。
那些在生活中被设计的「仪式感」 在生活中随处可见的一些现象：
路边摘了一朵鲜花送你，你便心生愉悦 宣誓的时候一般都要喊口号，做指定动作 收到的礼物，一定是经过精心包装好的 买到车的时候，销售一定要跟你与车一起合影 我自己的结论是：可以有，但是不能强求，不然就变成了形式。</description></item><item><title>How to fixed VS-code iView x-invalid-end-tag error</title><link>https://fun2ex.com/posts/how-to-fixed-vscode-iview-x-invalid-end-tag-error/</link><pubDate>Sat, 22 Jun 2019 18:09:38 +0800</pubDate><guid>https://fun2ex.com/posts/how-to-fixed-vscode-iview-x-invalid-end-tag-error/</guid><description>&lt;p>晚上在快乐的写代码的时候，突然碰到一个 eslint 检查器的错误：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&lt;span style="color:#75715e">&amp;lt;!-- 这样一段代码 --&amp;gt;&lt;/span>
&amp;lt;&lt;span style="color:#f92672">Col&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">Button&lt;/span>&amp;gt;test&amp;lt;/&lt;span style="color:#f92672">Button&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">Col&lt;/span>&amp;gt;
&lt;span style="color:#75715e">&amp;lt;!-- 报了一个这样的错误 --&amp;gt;&lt;/span>
`Parsing error: x-invalid-end-tag vue/no-parsing-error`
&lt;/code>&lt;/pre>&lt;/div>&lt;p>一路翻阅了 &lt;a href="https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-parsing-error.md">Eslint-Plugin-Vue&lt;/a> 和 &lt;a href="https://github.com/vuejs/vetur/blob/master/docs/linting-error.md#linting-for-template">Vetur&lt;/a> 的文档，终于找到了一段说明：&lt;/p>
&lt;p>![12FEB04B-3756-41EC-9589-0BC3D348F508.png](/resource/usr/uploads/2019/06/1297877056.png]&lt;/p></description></item><item><title>iperf 宽带性能测试工具</title><link>https://fun2ex.com/posts/iperf/</link><pubDate>Sun, 06 Jan 2019 18:09:38 +0800</pubDate><guid>https://fun2ex.com/posts/iperf/</guid><description>&lt;p>远程主机（服务端）：Ubuntu 18.04
本地主机（客户端）：Mac（安装了 &lt;a href="https://brew.sh/">HomeBrew&lt;/a>）&lt;/p>
&lt;p>原因：因为我们的本地机器不能被外网机器访问，所以服务端只能由外网机器承担，不影响性能测试结果。&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>实际上安装非常简单，只需要配置好环境就行。&lt;/p>
&lt;p>Ubuntu 安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">$ sudo apt install iperf3
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Mac 安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">$ brew install iperf3
&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样就好了，服务端和客户端只需要配置不同的参数就行。&lt;/p>
&lt;h2 id="使用">使用&lt;/h2>
&lt;p>服务端：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">$ iperf3 -s -i &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>客户端&lt;/p>
&lt;pre tabindex="0">&lt;code>$ iperf3 -c 192.xxx.xxx.xxx -i 2
&lt;/code>&lt;/pre>&lt;p>如果要测试上传速度，那么客户端在执行的时候增加 &lt;code>-R&lt;/code> 就可以，如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">$ iperf3 -c 192.xxx.xxx.xxx -i &lt;span style="color:#ae81ff">2&lt;/span> -R
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>梅林（Merlin）开启 Entware</title><link>https://fun2ex.com/posts/merlin-enable-the-entware/</link><pubDate>Sun, 06 Jan 2019 18:09:38 +0800</pubDate><guid>https://fun2ex.com/posts/merlin-enable-the-entware/</guid><description>&lt;h2 id="什么是-entware">什么是 Entware&lt;/h2>
&lt;p>Entware-ng 是一个适用于嵌入式系统的软件包库，使用 opkg 包管理系统进行管理，现在在官方的源上已经有超过 2000 个软件包了。&lt;/p>
&lt;p>原先计划用自带的 ipkg，无奈包太古老。&lt;/p>
&lt;p>官网地址：&lt;a href="https://entware.net/">Entware&lt;/a>&lt;/p></description></item><item><title>Caddy 泛域名配置指南</title><link>https://fun2ex.com/posts/caddy-automatic-https-by-dns/</link><pubDate>Sat, 29 Sep 2018 12:48:38 +0800</pubDate><guid>https://fun2ex.com/posts/caddy-automatic-https-by-dns/</guid><description>从 Automatic HTTPS - Caddy 文档得知，Caddy 是支持配置 *.fun2ex.com这样的泛域名格式的。
直接参考文档的配置，/etc/caddy/Caddyfile 初始配置如下:
*.fun2ex.com { tls { dns dnspod } root /var/www/html } 我自己用的是 DNSPOD，具体的支持 DNS 服务商可以直接从文档查看。 接下来要设置 DNSPOD Auth Api 的环境变量，具体环境变量值可以从 Automatic HTTPS - Caddy 找到。
因为我用的是 systemd 来管理 caddy 进程，所以直接编辑 caddy 的 service 文件就行：
sudo vim /etc/systemd/system/caddy.service 找到 Environment= 这一行，加上环境变量的值，如要添加多个，使用空格分割：
; Letsencrypt-issued certificates will be written to this directory. Environment=CADDYPATH=/etc/ssl/caddy DNSPOD_API_KEY=&amp;#39;$id,$hash_key&amp;#39; 让我们重启试试：
sudo systemctl restart caddy sudo systemctl status caddy 未完待续…</description></item><item><title>秦殇</title><link>https://fun2ex.com/posts/prince-of-qin/</link><pubDate>Sat, 22 Sep 2018 18:09:38 +0800</pubDate><guid>https://fun2ex.com/posts/prince-of-qin/</guid><description>&lt;p>&lt;img loading="lazy" src="https://fun2ex.com/resource/usr/uploads/2018/09/2304440361.jpg" alt="秦殇" />
&lt;/p>
&lt;h2 id="起源">起源&lt;/h2>
&lt;p>「秦殇」是我非常喜爱的一款游戏。&lt;/p>
&lt;p>它完全改变了我觉得历史很枯燥的观点，那只是因为课本的枯燥，其实历史也可以很有趣。多亏于制作团队对历史忠实还原的执着，秦国前后相关的人物、性格特点以及历史典故，都在游戏里面忠实还原了。随着剧情的推进，你能够在这里面遇到这个时期不同的人物，通过对话和行为就能够了解他们的故事和性格，否之如果你不了解某些历史典故，甚至剧情都没法推进下去。进而能让人激发起对了解这段历史的兴趣。换句话说，本人对秦国历史的所有的知识兴趣和了解都来自于「秦殇」。&lt;/p></description></item><item><title>Diving</title><link>https://fun2ex.com/diving/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fun2ex.com/diving/</guid><description>潜水日志</description></item><item><title>Games</title><link>https://fun2ex.com/game/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fun2ex.com/game/</guid><description>Games - Todo List</description></item><item><title>Music</title><link>https://fun2ex.com/music/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fun2ex.com/music/</guid><description>Favor Song
一双旧皮鞋</description></item></channel></rss>