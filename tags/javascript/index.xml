<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>javascript on 跨出界 - 技术分享</title><link>https://fun2ex.com/tags/javascript/</link><description>Recent content in javascript on 跨出界 - 技术分享</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 31 Jan 2023 15:31:50 +0800</lastBuildDate><atom:link href="https://fun2ex.com/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>在 hugo 中插入游戏信息卡片</title><link>https://fun2ex.com/posts/game-info-show-api/</link><pubDate>Tue, 31 Jan 2023 15:31:50 +0800</pubDate><guid>https://fun2ex.com/posts/game-info-show-api/</guid><description>起因：受到 https://immmmm.com/hugo-shortcodes-douban/ 的启发，看了一下也不是特别复杂，简单仿照了一下，获取游戏数据并展示。
目前支持游研社的链接（数据相对比较全，也比较好获取），后续有空的话可能会考虑一下支持一下 Steam 商店 之类的平台。
代码不复杂，直接开源了：gameinfo-api
框架使用的是 expressjs，使用起来并不复杂，直接看文档吧。
顺便撸了一个免费的 Node 服务：https://gameinfo-api.onrender.com，限制如下：
每月 100G 流量 每月 750 小时的时候时间 超过 15 分钟没有流量的话，服务会被睡眠，睡眠后如果重新收到请求，服务冷启动的时间可能需要 30s 或者更长的时间 如果不嫌弃的话，可以直接使用以上的 URL。
使用方法和案例如下：
hugo 的 shortcode 和 CSS 在此：https://gist.github.com/bobolo2ex/7ffd163cc99d7891c8c362b19b632b34
&amp;lt;!-- shortcode --&amp;gt; {{ $dbUrl := &amp;#34;https://https://gameinfo-api.onrender.com/&amp;#34; }} {{ $dbID := replaceRE `.*yystv.cn/g/([0-9]+)/.*` &amp;#34;$1&amp;#34; (.Get 0) }} {{ $db := getJSON $dbUrl &amp;#34;yys/v1/&amp;#34; $dbID }} {{ $score := div (int $db.score) 10.0 }} &amp;lt;div class=&amp;#34;post-preview game&amp;#34;&amp;gt; &amp;lt;img referrer-policy=&amp;#34;no-referrer&amp;#34; loading=&amp;#34;lazy&amp;#34; class=&amp;#34;post-preview--image&amp;#34; src=&amp;#34;{{ $db.</description></item><item><title> 面试题一道</title><link>https://fun2ex.com/posts/change_json_underline_to_camp/</link><pubDate>Fri, 15 Nov 2019 10:39:11 +0800</pubDate><guid>https://fun2ex.com/posts/change_json_underline_to_camp/</guid><description>这是碰到的一道面试题，记录一下。
问题是：如何 json 数据的所有 key 从下划线改为驼峰
下面是答题过程中的实现方法：
const testData = { a_bbb: 123, a_g: [1, 2, 3, 4], a_d: { s: 2, s_d: 3 }, a_f: [1, 2, 3, { a_g: 5 }], a_d_s: 1 } /** * _w 的形式转成 W */ function toCame(str) { return str.replace(/\_(\w)/g, function(a, b) { return b.toUpperCase(); }); } /** * 将一个json数据的所有key从下划线改为驼峰 * * @param {object | array} value 待处理对象或数组 * @returns {object | array} 处理后的对象或数组 */ function mapKeysToCamelCase(data) { if(data instanceof Array) { data.</description></item><item><title>How to fixed VS-code iView x-invalid-end-tag error</title><link>https://fun2ex.com/posts/how-to-fixed-vscode-iview-x-invalid-end-tag-error/</link><pubDate>Sat, 22 Jun 2019 18:09:38 +0800</pubDate><guid>https://fun2ex.com/posts/how-to-fixed-vscode-iview-x-invalid-end-tag-error/</guid><description>&lt;p>晚上在快乐的写代码的时候，突然碰到一个 eslint 检查器的错误：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&lt;span style="color:#75715e">&amp;lt;!-- 这样一段代码 --&amp;gt;&lt;/span>
&amp;lt;&lt;span style="color:#f92672">Col&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">Button&lt;/span>&amp;gt;test&amp;lt;/&lt;span style="color:#f92672">Button&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">Col&lt;/span>&amp;gt;
&lt;span style="color:#75715e">&amp;lt;!-- 报了一个这样的错误 --&amp;gt;&lt;/span>
`Parsing error: x-invalid-end-tag vue/no-parsing-error`
&lt;/code>&lt;/pre>&lt;/div>&lt;p>一路翻阅了 &lt;a href="https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/no-parsing-error.md">Eslint-Plugin-Vue&lt;/a> 和 &lt;a href="https://github.com/vuejs/vetur/blob/master/docs/linting-error.md#linting-for-template">Vetur&lt;/a> 的文档，终于找到了一段说明：&lt;/p>
&lt;p>![12FEB04B-3756-41EC-9589-0BC3D348F508.png](/resource/usr/uploads/2019/06/1297877056.png]&lt;/p></description></item></channel></rss>