<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>php on 跨出界</title><link>https://fun2ex.com/tags/php/</link><description>Recent content in php on 跨出界</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 15 Apr 2022 13:01:33 +0800</lastBuildDate><atom:link href="https://fun2ex.com/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>WordPress 如何禁止明文传输用户名密码，防止中间人攻击</title><link>https://fun2ex.com/posts/wordpress-login-encryption-user-pass/</link><pubDate>Fri, 15 Apr 2022 13:01:33 +0800</pubDate><guid>https://fun2ex.com/posts/wordpress-login-encryption-user-pass/</guid><description>虽然全站已经 HTTPS 了，但是因为某些原因，不允许明文传输用户名密码，也就意味着需要在客户端做一层加密，然后在服务端解密。 了解下来只能选择 RSA 的方式了。
准备工作，首先需要生成秘钥：
# 生成 1024 位的 RSA 私钥 openssl genrsa -out key.pem 1024 # 导出相对应的公钥 openssl rsa -in key.pem -pubout -out pubkey.pem # 复制出来备用 cat key.pem cat pubkey.pem 打开 wp-login.php 文件，将以下代码补充到 loginform 后面，我是放在 $login_script 后面。 主要是为了捕获登录表单，在 submit 的时候，把 user_login 和 user_pass 各自加密后再发送到服务端。
&amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/jsencrypt@3.2.1/bin/jsencrypt.min.js&amp;#34; type=&amp;#34;text/javascript&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt; (function($) { var user_pass = $(&amp;#34;#user_pass&amp;#34;); var user_login = $(&amp;#34;#user_login&amp;#34;); var loginform = $(&amp;#34;#loginform&amp;#34;); var sign = &amp;#39;公钥&amp;#39;; var encrypt = new JSEncrypt(); encrypt.</description></item></channel></rss>