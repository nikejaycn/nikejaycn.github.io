<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>rust on 跨出界 - 技术分享</title><link>https://fun2ex.com/tags/rust/</link><description>Recent content in rust on 跨出界 - 技术分享</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 19 Jul 2022 10:31:22 +0800</lastBuildDate><atom:link href="https://fun2ex.com/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Read and Parse JSON With Rust</title><link>https://fun2ex.com/posts/read-and-parse-json-with-rust/</link><pubDate>Tue, 19 Jul 2022 10:31:22 +0800</pubDate><guid>https://fun2ex.com/posts/read-and-parse-json-with-rust/</guid><description>主要讲讲 Rust 是如何处理 JSON 格式/文件的。
我的需求主要如下：
从一个远程地址下载 JSON 文件，保存到本地 读取这个 JSON 文件 对这个 JSON 文件内容进行搜索匹配 返回搜索结果 本文章的内容主要是集中讲讲第 2 步的内容。 首先需要解析 JSON 格式如下：
{ &amp;#34;0100000011D90000&amp;#34;: { &amp;#34;bannerUrl&amp;#34;: &amp;#34;https://img.../37fdb...f83a.jpg&amp;#34;, &amp;#34;category&amp;#34;: [ &amp;#34;Adventure&amp;#34;, &amp;#34;RPG&amp;#34; ], &amp;#34;description&amp;#34;: &amp;#34;Welcome to the Sinnoh region! &amp;#34;, &amp;#34;developer&amp;#34;: null, &amp;#34;id&amp;#34;: &amp;#34;0100000011D90000&amp;#34;, &amp;#34;isDemo&amp;#34;: false, &amp;#34;language&amp;#34;: &amp;#34;en&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Pok\u00e9mon\u2122 Brilliant Diamond&amp;#34;, &amp;#34;nsuId&amp;#34;: 70010000039950, &amp;#34;numberOfPlayers&amp;#34;: 1, &amp;#34;publisher&amp;#34;: &amp;#34;Nintendo&amp;#34;, &amp;#34;rank&amp;#34;: 30712, &amp;#34;ratingContent&amp;#34;: [ &amp;#34;Mild Cartoon Violence&amp;#34;, &amp;#34;Users Interact&amp;#34;, &amp;#34;In-Game Purchases&amp;#34; ], &amp;#34;size&amp;#34;: 7334789120, &amp;#34;version&amp;#34;: 0 }, .</description></item><item><title>Rust 基本知识</title><link>https://fun2ex.com/posts/rust-guide-01/</link><pubDate>Thu, 14 Jul 2022 13:41:53 +0800</pubDate><guid>https://fun2ex.com/posts/rust-guide-01/</guid><description>更多是从一个前端开发者的角度，来比较一下两门语言的区别，以助于更方便的入门。
基本类型（DataType） 多数情况下，基本类型直接代表了最底层的语言实现。
JavaScript 是弱类型，基本数据类型有以下 7 种：
String Number BigInt Boolean Symbol ( ECMAScript 2016 新增 ) null undefined Rust 是 静态类型 ( statically typed ) 语言，也就是说在编译时就必须知道所有变量的类型。每一个值都属于某一个 数据类型 ( data type )，这告诉 Rust 它被指定为何种数据，以便明确数据处理方式。基本都属于两类数据类型子集：标量（scalar）和复合（compound）。
Integer （整数类型）
位长度 有符号 无符号 8-bit i8 u8 16-bit i16 u16 32-bit i32 u32 64-bit i64 u64 128-bit i128 u128 arch isize usize 每一个有符号的变体可以储存包含从 $-(2^{n-1})$ 到 $2^{n-1}-1$ 在内的数字，这里 $n$ 是变体使用的位数。所以 i8可以储存从 $-(2^7)$ 到 $2^7-1$ 在内的数字，也就是从 $-128$ 到 $127$ 。无符号的变体可以储存从 $0$ 到 $2^n-1$ 的数字，所以 u8 可以储存从 $0$ 到 $2^8-1$ 的数字，也就是从 $0$ 到 $255$。</description></item></channel></rss>